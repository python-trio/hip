---
name: CI

on: [push, pull_request]

jobs:
  package:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Install dependencies
        run: |
          python3.7 -m pip install unasync setuptools wheel twine
      - name: Build packages
        run: |
          python3.7 setup.py sdist bdist_wheel
      - name: Check packages
        run: |
          set -exo pipefail;
          if [ $(python3.7 -m twine check dist/* | grep -c 'warning') != 0 ]; then exit 1; fi

  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Install dependencies
        run: |
          python3.7 -m pip install nox
      - name: Lint the code
        run: nox -s lint

  docs:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Install dependencies
        run: |
          python3.7 -m pip install nox
      - name: Build the docs
        run: nox -s docs

  ubuntu:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: [3.5, 3.6, 3.7, 3.8]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Set Up Python 3.7 to run nox
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Set Up Python - ${{ matrix.python-version }}
        if: matrix.python_version != '3.7'
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Dependencies
        run: |
          python3.7 -m pip install nox unasync
      - name: Run Tests
        run: |
          nox -s test-${{ matrix.python-version }}
      - name: Upload Coverage
        run: ./ci/upload_coverage.sh
        env:
          JOB_NAME: "ubuntu (${{ matrix.python-version }})"

  macOS:
    runs-on: macos-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: [3.5, 3.6, 3.7, 3.8]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Set Up Python 3.7 to run nox
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Set Up Python - ${{ matrix.python-version }}
        if: matrix.python_version != '3.7'
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Dependencies
        run: |
          python3.7 -m pip install nox unasync
      - name: Run Tests
        run: |
          nox -s test-${{ matrix.python-version }}
      - name: Upload Coverage
        run: ./ci/upload_coverage.sh
        env:
          JOB_NAME: "macOS (${{ matrix.python-version }})"

  Windows:
    runs-on: windows-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: [3.5, 3.6, 3.7, 3.8]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Set Up Python 3.7 to run nox
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Set Up Python - ${{ matrix.python-version }}
        if: matrix.python_version != '3.7'
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies (Windows)
        run: |
          # Work around https://github.com/theacodes/nox/issues/250
          Remove-Item C:\ProgramData\Chocolatey\bin\python2.7.exe
          py -3.7 -m pip install nox unasync
      - name: Run Tests
        run: |
          nox -s test-${{ matrix.python-version }}
      - name: Upload Coverage
        run: ./ci/upload_coverage.sh
        shell: bash
        env:
          JOB_NAME: "Windows (${{ matrix.python-version }})"
